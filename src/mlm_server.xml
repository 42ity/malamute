<class
    name = "mlm_server"
    title = "Malamute Server"
    script = "zproto_server_c"
    protocol_class = "mlm_msg"
    package_dir = "../include"
    project_header = "mlm_classes.h"
    export_macro = "MLM_EXPORT"
    >
    This is a server implementation of the Malamute Protocol
    <include filename = "../license.xml" />

    <state name = "start" inherit = "external">
        <event name = "CONNECTION OPEN" next = "connected">
            <action name = "register new client" />
            <action name = "send" message = "OK" />
        </event>
    </state>

    <state name = "connected" inherit = "external">
        <event name = "STREAM WRITE">
            <action name = "open stream writer" />
            <action name = "send" message = "OK" />
        </event>
        <event name = "STREAM READ">
            <action name = "open stream reader" />
            <action name = "send" message = "OK" />
        </event>
        <event name = "STREAM SEND">
            <action name = "write message to stream" />
        </event>
        <event name = "forward">
            <action name = "get content to forward" />
            <action name = "send" message = "STREAM DELIVER" />
        </event>
        <event name = "MAILBOX SEND">
            <action name = "write message to mailbox" />
        </event>
        <event name = "SERVICE SEND">
            <action name = "write message to service" />
        </event>
        <event name = "SERVICE OFFER">
            <action name = "open service worker" />
        </event>
        <event name = "CONFIRM">
            <action name = "have message confirmation" />
        </event>
        <event name = "CREDIT">
            <action name = "credit the client" />
        </event>
        <event name = "CONNECTION PING">
            <action name = "send" message = "CONNECTION PONG" />
        </event>
    </state>

    <state name = "external">
        <event name = "CONNECTION CLOSE" next = "closing">
            <action name = "deregister the client" />
            <action name = "send" message = "OK" />
            <action name = "allow time to settle" />
        </event>
        <!-- All other protocol messages are invalid -->
        <event name = "*">
            <action name = "message not valid in this state" />
            <action name = "send" message = "ERROR" />
            <action name = "terminate" />
        </event>
         This built-in event hits on a client timeout -->
<!--        <event name = "expired">
            <action name = "terminate" />
        </event>
        <!-- Client tried to do something we don't allow yet -->
        <event name = "exception">
            <action name = "send" message = "ERROR" />
            <action name = "terminate" />
        </event>
    </state>

    <state name = "closing">
        <event name = "settled">
            <action name = "terminate" />
        </event>
        <event name = "forward">
            <action name = "send" message = "STREAM DELIVER" />
        </event>
    </state>
</class>
